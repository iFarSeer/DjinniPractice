// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from encrypt.djinni

#include "NativeDataProcessor.hpp"  // my header
#include "NativeProcessCallBack.hpp"
#include "NativeSourceData.hpp"

namespace djinni_generated {

NativeDataProcessor::NativeDataProcessor() : ::djinni::JniInterface<::ifarseer::DataProcessor, NativeDataProcessor>("com/ifarseer/crypt/DataProcessor$CppProxy") {}

NativeDataProcessor::~NativeDataProcessor() = default;


CJNIEXPORT void JNICALL Java_com_ifarseer_crypt_DataProcessor_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::ifarseer::DataProcessor>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_ifarseer_crypt_DataProcessor_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::ifarseer::DataProcessor::create();
        return ::djinni::release(::djinni_generated::NativeDataProcessor::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT void JNICALL Java_com_ifarseer_crypt_DataProcessor_00024CppProxy_native_1process(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef, jobject j_data, jobject j_callback)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::ifarseer::DataProcessor>(nativeRef);
        ref->process(::djinni_generated::NativeSourceData::toCpp(jniEnv, j_data),
                     ::djinni_generated::NativeProcessCallBack::toCpp(jniEnv, j_callback));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

}  // namespace djinni_generated
