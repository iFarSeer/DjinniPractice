// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from encrypt.djinni

#pragma once

#include "djinni_support.hpp"
#include "process_call_back.hpp"

namespace djinni_generated {

class NativeProcessCallBack final : ::djinni::JniInterface<::ifarseer::ProcessCallBack, NativeProcessCallBack> {
public:
    using CppType = std::shared_ptr<::ifarseer::ProcessCallBack>;
    using CppOptType = std::shared_ptr<::ifarseer::ProcessCallBack>;
    using JniType = jobject;

    using Boxed = NativeProcessCallBack;

    ~NativeProcessCallBack();

    static CppType toCpp(JNIEnv* jniEnv, JniType j) { return ::djinni::JniClass<NativeProcessCallBack>::get()._fromJava(jniEnv, j); }
    static ::djinni::LocalRef<JniType> fromCppOpt(JNIEnv* jniEnv, const CppOptType& c) { return {jniEnv, ::djinni::JniClass<NativeProcessCallBack>::get()._toJava(jniEnv, c)}; }
    static ::djinni::LocalRef<JniType> fromCpp(JNIEnv* jniEnv, const CppType& c) { return fromCppOpt(jniEnv, c); }

private:
    NativeProcessCallBack();
    friend ::djinni::JniClass<NativeProcessCallBack>;
    friend ::djinni::JniInterface<::ifarseer::ProcessCallBack, NativeProcessCallBack>;

    class JavaProxy final : ::djinni::JavaProxyHandle<JavaProxy>, public ::ifarseer::ProcessCallBack
    {
    public:
        JavaProxy(JniType j);
        ~JavaProxy();

        void on_result(const ::ifarseer::ResultData & data) override;

    private:
        friend ::djinni::JniInterface<::ifarseer::ProcessCallBack, ::djinni_generated::NativeProcessCallBack>;
    };

    const ::djinni::GlobalRef<jclass> clazz { ::djinni::jniFindClass("com/ifarseer/crypt/ProcessCallBack") };
    const jmethodID method_onResult { ::djinni::jniGetMethodID(clazz.get(), "onResult", "(Lcom/ifarseer/crypt/ResultData;)V") };
};

}  // namespace djinni_generated
