// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from encrypt.djinni

package com.ifarseer.crypt;

import java.util.concurrent.atomic.AtomicBoolean;
import javax.annotation.CheckForNull;
import javax.annotation.Nonnull;

public abstract class DataProcessor {
    public abstract void process(@Nonnull SourceData data, @CheckForNull ProcessCallBack callback);

    @CheckForNull
    public static native DataProcessor create();

    private static final class CppProxy extends DataProcessor
    {
        private final long nativeRef;
        private final AtomicBoolean destroyed = new AtomicBoolean(false);

        private CppProxy(long nativeRef)
        {
            if (nativeRef == 0) throw new RuntimeException("nativeRef is zero");
            this.nativeRef = nativeRef;
        }

        private native void nativeDestroy(long nativeRef);
        public void destroy()
        {
            boolean destroyed = this.destroyed.getAndSet(true);
            if (!destroyed) nativeDestroy(this.nativeRef);
        }
        protected void finalize() throws java.lang.Throwable
        {
            destroy();
            super.finalize();
        }

        @Override
        public void process(SourceData data, ProcessCallBack callback)
        {
            assert !this.destroyed.get() : "trying to use a destroyed object";
            native_process(this.nativeRef, data, callback);
        }
        private native void native_process(long _nativeRef, SourceData data, ProcessCallBack callback);
    }
}
